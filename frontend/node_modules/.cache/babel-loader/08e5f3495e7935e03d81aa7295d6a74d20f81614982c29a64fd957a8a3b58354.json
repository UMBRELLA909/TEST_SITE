{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mixzh\\\\Desktop\\\\\\u0441\\u0430\\u0439\\u0442\\\\hotel-app\\\\frontend\\\\src\\\\components\\\\ReviewsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewsList() {\n  _s();\n  const [reviews, setReviews] = useState(null); // Инициализируем как null\n\n  useEffect(() => {\n    fetch('http://localhost:8080/api/reviews').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setReviews(data)).catch(error => {\n      console.error('Error fetching reviews:', error);\n      setReviews([]); // Устанавливаем пустой массив в случае ошибки\n    });\n  }, []);\n\n  // Если данные еще не загружены, показываем сообщение\n  if (reviews === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading reviews...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Если данные загружены, но массив пустой, показываем сообщение\n  if (reviews.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No reviews found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Rating: \", review.rating, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hotel ID: \", review.hotel_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Customer ID: \", review.customer_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Comment: \", review.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(review.review_date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewsList, \"wDktPw+cZqeIVQQbuoLFNcpcag4=\");\n_c = ReviewsList;\nexport default ReviewsList;\nvar _c;\n$RefreshReg$(_c, \"ReviewsList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ReviewsList","_s","reviews","setReviews","fetch","then","response","ok","Error","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","review","rating","hotel_id","customer_id","comment","Date","review_date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["C:/Users/mixzh/Desktop/сайт/hotel-app/frontend/src/components/ReviewsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\n\r\nfunction ReviewsList() {\r\n  const [reviews, setReviews] = useState(null); // Инициализируем как null\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/reviews')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => setReviews(data))\r\n      .catch(error => {\r\n        console.error('Error fetching reviews:', error);\r\n        setReviews([]); // Устанавливаем пустой массив в случае ошибки\r\n      });\r\n  }, []);\r\n\r\n  // Если данные еще не загружены, показываем сообщение\r\n  if (reviews === null) {\r\n    return <div>Loading reviews...</div>;\r\n  }\r\n\r\n  // Если данные загружены, но массив пустой, показываем сообщение\r\n  if (reviews.length === 0) {\r\n    return <div>No reviews found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"reviews-list\">\r\n      <h2>Reviews</h2>\r\n      <div className=\"list\">\r\n        {reviews.map(review => (\r\n          <div key={review.id} className=\"review-card\">\r\n            <h3>Rating: {review.rating}/5</h3>\r\n            <p>Hotel ID: {review.hotel_id}</p>\r\n            <p>Customer ID: {review.customer_id}</p>\r\n            <p>Comment: {review.comment}</p>\r\n            <p>Date: {new Date(review.review_date).toLocaleDateString()}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}