{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mixzh\\\\Desktop\\\\\\u0441\\u0430\\u0439\\u0442\\\\hotel-app\\\\frontend\\\\src\\\\components\\\\BookingsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingsList() {\n  _s();\n  const [bookings, setBookings] = useState(null); // Инициализируем как null\n  const [error, setError] = useState(null); // Состояние для ошибок\n\n  useEffect(() => {\n    fetch('http://localhost:8080/api/bookings').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setBookings(data)).catch(error => {\n      console.error('Error fetching bookings:', error);\n      setError(error.message); // Устанавливаем сообщение об ошибке\n      setBookings([]);\n    });\n  }, []);\n\n  // Если произошла ошибка, показываем сообщение\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Если данные еще не загружены, показываем сообщение\n  if (bookings === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading bookings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Если данные загружены, но массив пустой, показываем сообщение\n  if (bookings.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No bookings found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookings-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bookings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Booking ID: \", booking.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hotel ID: \", booking.hotel_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Room ID: \", booking.room_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Customer ID: \", booking.customer_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Check-in: \", new Date(booking.check_in_date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Check-out: \", new Date(booking.check_out_date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: $\", booking.total_price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, booking.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingsList, \"ed7PqxcFSodMdbzJD+Z2Pvv84Po=\");\n_c = BookingsList;\nexport default BookingsList;\nvar _c;\n$RefreshReg$(_c, \"BookingsList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BookingsList","_s","bookings","setBookings","error","setError","fetch","then","response","ok","Error","json","data","catch","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","booking","id","hotel_id","room_id","customer_id","Date","check_in_date","toLocaleDateString","check_out_date","total_price","_c","$RefreshReg$"],"sources":["C:/Users/mixzh/Desktop/сайт/hotel-app/frontend/src/components/BookingsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\n\r\nfunction BookingsList() {\r\n  const [bookings, setBookings] = useState(null); // Инициализируем как null\r\n  const [error, setError] = useState(null); // Состояние для ошибок\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/bookings')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => setBookings(data))\r\n      .catch(error => {\r\n        console.error('Error fetching bookings:', error);\r\n        setError(error.message); // Устанавливаем сообщение об ошибке\r\n        setBookings([]);\r\n      });\r\n  }, []);\r\n\r\n  // Если произошла ошибка, показываем сообщение\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  // Если данные еще не загружены, показываем сообщение\r\n  if (bookings === null) {\r\n    return <div>Loading bookings...</div>;\r\n  }\r\n\r\n  // Если данные загружены, но массив пустой, показываем сообщение\r\n  if (bookings.length === 0) {\r\n    return <div>No bookings found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bookings-list\">\r\n      <h2>Bookings</h2>\r\n      <div className=\"list\">\r\n        {bookings.map(booking => (\r\n          <div key={booking.id} className=\"booking-card\">\r\n            <h3>Booking ID: {booking.id}</h3>\r\n            <p>Hotel ID: {booking.hotel_id}</p>\r\n            <p>Room ID: {booking.room_id}</p>\r\n            <p>Customer ID: {booking.customer_id}</p>\r\n            <p>Check-in: {new Date(booking.check_in_date).toLocaleDateString()}</p>\r\n            <p>Check-out: {new Date(booking.check_out_date).toLocaleDateString()}</p>\r\n            <p>Total Price: ${booking.total_price}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookingsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}