{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mixzh\\\\Desktop\\\\\\u0441\\u0430\\u0439\\u0442\\\\hotel-app\\\\frontend\\\\src\\\\components\\\\CustomersList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomersList() {\n  _s();\n  const [customers, setCustomers] = useState(null); // Инициализируем как null\n  const [error, setError] = useState(null); // Состояние для ошибок\n\n  useEffect(() => {\n    fetch('http://localhost:8080/api/customers').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setCustomers(data)).catch(error => {\n      console.error('Error fetching customers:', error);\n      setError(error.message); // Устанавливаем сообщение об ошибке\n      setCustomers([]);\n    });\n  }, []);\n\n  // Если произошла ошибка, показываем сообщение\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Если данные еще не загружены, показываем сообщение\n  if (customers === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading customers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Если данные загружены, но массив пустой, показываем сообщение\n  if (customers.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No customers found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customers-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [customer.first_name, \" \", customer.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", customer.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", customer.phone_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Loyalty Points: \", customer.loyalty_points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomersList, \"pgYJmF9AQm6ax6l9eDed+oPU65c=\");\n_c = CustomersList;\nexport default CustomersList;\nvar _c;\n$RefreshReg$(_c, \"CustomersList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CustomersList","_s","customers","setCustomers","error","setError","fetch","then","response","ok","Error","json","data","catch","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","customer","first_name","last_name","email","phone_number","loyalty_points","id","_c","$RefreshReg$"],"sources":["C:/Users/mixzh/Desktop/сайт/hotel-app/frontend/src/components/CustomersList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\n\r\nfunction CustomersList() {\r\n  const [customers, setCustomers] = useState(null); // Инициализируем как null\r\n  const [error, setError] = useState(null); // Состояние для ошибок\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/customers')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => setCustomers(data))\r\n      .catch(error => {\r\n        console.error('Error fetching customers:', error);\r\n        setError(error.message); // Устанавливаем сообщение об ошибке\r\n        setCustomers([]);\r\n      });\r\n  }, []);\r\n\r\n  // Если произошла ошибка, показываем сообщение\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  // Если данные еще не загружены, показываем сообщение\r\n  if (customers === null) {\r\n    return <div>Loading customers...</div>;\r\n  }\r\n\r\n  // Если данные загружены, но массив пустой, показываем сообщение\r\n  if (customers.length === 0) {\r\n    return <div>No customers found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"customers-list\">\r\n      <h2>Customers</h2>\r\n      <div className=\"list\">\r\n        {customers.map(customer => (\r\n          <div key={customer.id} className=\"customer-card\">\r\n            <h3>{customer.first_name} {customer.last_name}</h3>\r\n            <p>Email: {customer.email}</p>\r\n            <p>Phone: {customer.phone_number}</p>\r\n            <p>Loyalty Points: {customer.loyalty_points}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomersList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}