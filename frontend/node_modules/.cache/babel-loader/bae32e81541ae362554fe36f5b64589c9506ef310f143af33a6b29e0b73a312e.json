{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mixzh\\\\Desktop\\\\\\u0441\\u0430\\u0439\\u0442\\\\hotel-app\\\\frontend\\\\src\\\\components\\\\RoomsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomsList() {\n  _s();\n  const [rooms, setRooms] = useState(null); // Инициализируем как null\n  const [error, setError] = useState(null); // Состояние для ошибок\n\n  useEffect(() => {\n    fetch('http://localhost:8080/api/rooms').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setRooms(data)).catch(error => {\n      console.error('Error fetching rooms:', error);\n      setError(error.message); // Устанавливаем сообщение об ошибке\n      setRooms([]);\n    });\n  }, []);\n\n  // Если произошла ошибка, показываем сообщение\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Если данные еще не загружены, показываем сообщение\n  if (rooms === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading rooms...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Если данные загружены, но массив пустой, показываем сообщение\n  if (rooms.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No rooms found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rooms-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: room.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hotel ID: \", room.hotel_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capacity: \", room.capacity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", room.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Available: \", room.available ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomsList, \"DAVim0lHTJYJgMJZVKcY1Ru7l+0=\");\n_c = RoomsList;\nexport default RoomsList;\nvar _c;\n$RefreshReg$(_c, \"RoomsList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RoomsList","_s","rooms","setRooms","error","setError","fetch","then","response","ok","Error","json","data","catch","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","room","category","hotel_id","capacity","price","available","id","_c","$RefreshReg$"],"sources":["C:/Users/mixzh/Desktop/сайт/hotel-app/frontend/src/components/RoomsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\n\r\nfunction RoomsList() {\r\n  const [rooms, setRooms] = useState(null); // Инициализируем как null\r\n  const [error, setError] = useState(null); // Состояние для ошибок\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/rooms')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => setRooms(data))\r\n      .catch(error => {\r\n        console.error('Error fetching rooms:', error);\r\n        setError(error.message); // Устанавливаем сообщение об ошибке\r\n        setRooms([]);\r\n      });\r\n  }, []);\r\n\r\n  // Если произошла ошибка, показываем сообщение\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  // Если данные еще не загружены, показываем сообщение\r\n  if (rooms === null) {\r\n    return <div>Loading rooms...</div>;\r\n  }\r\n\r\n  // Если данные загружены, но массив пустой, показываем сообщение\r\n  if (rooms.length === 0) {\r\n    return <div>No rooms found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rooms-list\">\r\n      <h2>Rooms</h2>\r\n      <div className=\"list\">\r\n        {rooms.map(room => (\r\n          <div key={room.id} className=\"room-card\">\r\n            <h3>{room.category}</h3>\r\n            <p>Hotel ID: {room.hotel_id}</p>\r\n            <p>Capacity: {room.capacity}</p>\r\n            <p>Price: ${room.price}</p>\r\n            <p>Available: {room.available ? 'Yes' : 'No'}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}